pipeline {
    agent any

    environment {
        VAULT_ADDR = 'http://localhost:8201'
        ROLE_ID = 'my-role-id' // Замените my-role-id на ваш role_id
    }

    stages {
        stage('Preparation') {
            steps {
                echo 'Preparing the environment...'
            }
        }
        
        stage('Get Secret') {
            steps {
                withCredentials([string(credentialsId: 'vault-secret-id', variable: 'SECRET_ID')]) {
                    script {
                         // Аутентификация с использованием AppRole и возвращение результата в формате JSON
                        def loginOutput = sh(script: "vault write -format=json auth/approle/login role_id=\$ROLE_ID secret_id=\$SECRET_ID", returnStdout: true).trim()
                        // Парсинг вывода JSON для извлечения токена клиента
                        def tokenData = readJSON text: loginOutput
                        def clientToken = tokenData.auth.client_token
                        // Установка токена как переменной среды
                        env.VAULT_TOKEN = clientToken
                        
                        // Убедитесь, что вы не выводите VAULT_TOKEN в логи
                        // Запрос Secrets используя Vault CLI
                        def secrets = sh(script: "vault kv get -format=json secret/myapp/config", returnStdout: true).trim()
                        
                        // Парсинг JSON ответа для извлечения конкретных секретов
                        def parsedSecrets = readJSON text: secrets
                        
                        // Присваивание переменных среды без echo для безопасности
                        env.MYAPP_USERNAME = parsedSecrets.data.username
                        env.MYAPP_PASSWORD = parsedSecrets.data.password

                        // Вывод полученных секретов
                        println "Значение username: ${env.MYAPP_USERNAME}"
                        println "Значение password: ${env.MYAPP_PASSWORD}"
                    }
                }
            }
        }

        stage('Use Secret') {
            steps {
                script {
                    // Использование секретов, убедитесь, что они не печатаются или не отображаются.
                    // Например, вы можете передать их в другой скрипт или приложение.
                    sh 'echo "Передача секретов в безопасное место"'
                }
            }
        }

        stage('Post-processing') {
            steps {
                echo 'Cleaning up...'
            }
        }
    }
}
